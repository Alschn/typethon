// comment
// // nested one line comment - works fine

/*
  multiline comment
  nesting multiline comments will lead to parsing error
*/

const a: int = 1;
const b: float = 1.5;
const c: str = "Hello world!";
const d: bool = false
let nullable1?: int;
let nullable2?: int = 5;

a = a + 3 % 1;
b = (b - 1.23) / 0.75;
c = c + "!!!";
d = not false or true and 1 > 3;

let not_nullable: int = nullable2 ?? 12345;
if (nullable1 == null) print("Nullable1 is a null :(");

while (true) {
    if (nullable1 == null) {

    }
    elif (a > 15 or b <= 13.37) {
        print(str(a));
    }
    else {}
}

def f(arg1: int, arg2: str): void => {
    // random comment
}

// immediately invoked lambda
(): func(() => void) => {}();

const increment: func((x: int) => int) = (x: int): int => x + 1;

/*
def f2(arg1: int, arg2: str) => {
    // // random comment
    if(a) {} elifwhileifififf
    everything except:
        1). asterix symbol
    can be put there ( ͡° ͜ʖ ͡°)
    not and 1 + 3 != 2 /// ++++++++
    -3 % 2 - 10e-3 + "XD"
}
*/
